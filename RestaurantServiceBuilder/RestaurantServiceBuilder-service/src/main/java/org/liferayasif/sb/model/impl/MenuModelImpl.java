/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.liferayasif.sb.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import org.liferayasif.sb.model.Menu;
import org.liferayasif.sb.model.MenuModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Menu service. Represents a row in the &quot;AA_Menu&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link MenuModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MenuImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MenuImpl
 * @see Menu
 * @see MenuModel
 * @generated
 */
@ProviderType
public class MenuModelImpl extends BaseModelImpl<Menu> implements MenuModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a menu model instance should use the {@link Menu} interface instead.
	 */
	public static final String TABLE_NAME = "AA_Menu";
	public static final Object[][] TABLE_COLUMNS = {
			{ "menuId", Types.BIGINT },
			{ "type_", Types.VARCHAR },
			{ "foodName", Types.VARCHAR },
			{ "price", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("menuId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("type_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("foodName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("price", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table AA_Menu (menuId LONG not null primary key,type_ VARCHAR(75) null,foodName VARCHAR(75) null,price LONG)";
	public static final String TABLE_SQL_DROP = "drop table AA_Menu";
	public static final String ORDER_BY_JPQL = " ORDER BY menu.menuId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY AA_Menu.menuId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(org.liferayasif.sb.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.org.liferayasif.sb.model.Menu"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(org.liferayasif.sb.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.org.liferayasif.sb.model.Menu"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(org.liferayasif.sb.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.liferayasif.sb.model.Menu"),
			true);
	public static final long TYPE_COLUMN_BITMASK = 1L;
	public static final long MENUID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(org.liferayasif.sb.service.util.ServiceProps.get(
				"lock.expiration.time.org.liferayasif.sb.model.Menu"));

	public MenuModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _menuId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMenuId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _menuId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Menu.class;
	}

	@Override
	public String getModelClassName() {
		return Menu.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("menuId", getMenuId());
		attributes.put("type", getType());
		attributes.put("foodName", getFoodName());
		attributes.put("price", getPrice());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long menuId = (Long)attributes.get("menuId");

		if (menuId != null) {
			setMenuId(menuId);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		String foodName = (String)attributes.get("foodName");

		if (foodName != null) {
			setFoodName(foodName);
		}

		Long price = (Long)attributes.get("price");

		if (price != null) {
			setPrice(price);
		}
	}

	@Override
	public long getMenuId() {
		return _menuId;
	}

	@Override
	public void setMenuId(long menuId) {
		_menuId = menuId;
	}

	@Override
	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		_columnBitmask |= TYPE_COLUMN_BITMASK;

		if (_originalType == null) {
			_originalType = _type;
		}

		_type = type;
	}

	public String getOriginalType() {
		return GetterUtil.getString(_originalType);
	}

	@Override
	public String getFoodName() {
		if (_foodName == null) {
			return StringPool.BLANK;
		}
		else {
			return _foodName;
		}
	}

	@Override
	public void setFoodName(String foodName) {
		_foodName = foodName;
	}

	@Override
	public long getPrice() {
		return _price;
	}

	@Override
	public void setPrice(long price) {
		_price = price;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Menu.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Menu toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Menu)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MenuImpl menuImpl = new MenuImpl();

		menuImpl.setMenuId(getMenuId());
		menuImpl.setType(getType());
		menuImpl.setFoodName(getFoodName());
		menuImpl.setPrice(getPrice());

		menuImpl.resetOriginalValues();

		return menuImpl;
	}

	@Override
	public int compareTo(Menu menu) {
		long primaryKey = menu.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Menu)) {
			return false;
		}

		Menu menu = (Menu)obj;

		long primaryKey = menu.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		MenuModelImpl menuModelImpl = this;

		menuModelImpl._originalType = menuModelImpl._type;

		menuModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Menu> toCacheModel() {
		MenuCacheModel menuCacheModel = new MenuCacheModel();

		menuCacheModel.menuId = getMenuId();

		menuCacheModel.type = getType();

		String type = menuCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			menuCacheModel.type = null;
		}

		menuCacheModel.foodName = getFoodName();

		String foodName = menuCacheModel.foodName;

		if ((foodName != null) && (foodName.length() == 0)) {
			menuCacheModel.foodName = null;
		}

		menuCacheModel.price = getPrice();

		return menuCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{menuId=");
		sb.append(getMenuId());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", foodName=");
		sb.append(getFoodName());
		sb.append(", price=");
		sb.append(getPrice());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("org.liferayasif.sb.model.Menu");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>menuId</column-name><column-value><![CDATA[");
		sb.append(getMenuId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>foodName</column-name><column-value><![CDATA[");
		sb.append(getFoodName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>price</column-name><column-value><![CDATA[");
		sb.append(getPrice());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Menu.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Menu.class
		};
	private long _menuId;
	private String _type;
	private String _originalType;
	private String _foodName;
	private long _price;
	private long _columnBitmask;
	private Menu _escapedModel;
}